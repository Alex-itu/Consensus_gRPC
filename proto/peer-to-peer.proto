/*syntax = "proto3";

option go_package = "github.com/Alex-itu/Consensus_gRPC/proto";

package proto;

// compile command:
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative [path to file, ex. proto/template.proto]

// if you need to target a port or localhost (or ip address)
// go run main.go -port=1234 -target="localhost:5678"
//


service CriticalSection {
    rpc SendMessage (stream AccessRequest) returns (stream AccessResponse);
}

message AccessRequest {
    string node_id = 1;
}

message AccessResponse {
    string response = 1;
}
*/

syntax = "proto3";

option go_package = "github.com/PatrickMatthiesen/DSYS-gRPC-template/proto";

package helloservice;

service HelloService {
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}