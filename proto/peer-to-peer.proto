/*syntax = "proto3";

option go_package = "github.com/Alex-itu/Consensus_gRPC/proto";

package proto;

// compile command:
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/peer-to-peer.proto 

// if you need to target a port or localhost (or ip address)
// go run main.go -port=1234 -target="localhost:5678"
//


service CriticalSection {
    rpc SendMessage (stream AccessRequest) returns (stream AccessResponse);
}

message AccessRequest {
    string node_id = 1;
}

message AccessResponse {
    string response = 1;
}
*/

syntax = "proto3";

option go_package = "github.com/Alex-itu/Consensus_gRPC/tree/main/proto";

package helloservice;

// HelloService
service TokenService {
  //change these names
  rpc tokenChat (stream TokenRequest) returns (stream TokenRequest) {}
}

//HelloRequest
// The request message containing the user's name.
//change name, also add more types in
message TokenRequest {
  string token = 1;
}

// HelloReply
// The response message containing the greetings
//change name, also add more types in
message ack {
  string message = 1;
}
